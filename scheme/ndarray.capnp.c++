// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: ndarray.capnp

#include "ndarray.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<85> b_b5d9915c41fd9ac2 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    194, 154, 253,  65,  92, 145, 217, 181,
     14,   0,   0,   0,   1,   0,   2,   0,
    240, 255,  23, 160, 170, 254,  78, 147,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 178,   0,   0,   0,
     29,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110, 100,  97, 114, 114,  97, 121,  46,
     99,  97, 112, 110, 112,  58,  78,  68,
     65, 114, 114,  97, 121,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
     14, 220, 242, 219,  89,  52,   8, 165,
      1,   0,   0,   0,  50,   0,   0,   0,
     68,  84, 121, 112, 101,   0,   0,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    120,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,   0,   0,   0,   3,   0,   1,   0,
    124,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    121,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116,   0,   0,   0,   3,   0,   1,   0,
    128,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    124,   0,   0,   0,   3,   0,   1,   0,
    136,   0,   0,   0,   2,   0,   1,   0,
    115, 104,  97, 112, 101,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 116, 121, 112, 101,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
     14, 220, 242, 219,  89,  52,   8, 165,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  97, 116,  97,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 105, 109, 101, 115, 116,  97, 109,
    112,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b5d9915c41fd9ac2 = b_b5d9915c41fd9ac2.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_b5d9915c41fd9ac2[] = {
  &s_a5083459dbf2dc0e,
};
static const uint16_t m_b5d9915c41fd9ac2[] = {2, 1, 0, 3};
static const uint16_t i_b5d9915c41fd9ac2[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_b5d9915c41fd9ac2 = {
  0xb5d9915c41fd9ac2, b_b5d9915c41fd9ac2.words, 85, d_b5d9915c41fd9ac2, m_b5d9915c41fd9ac2,
  1, 4, i_b5d9915c41fd9ac2, nullptr, nullptr, { &s_b5d9915c41fd9ac2, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<67> b_a5083459dbf2dc0e = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     14, 220, 242, 219,  89,  52,   8, 165,
     22,   0,   0,   0,   2,   0,   0,   0,
    194, 154, 253,  65,  92, 145, 217, 181,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 226,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  39,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110, 100,  97, 114, 114,  97, 121,  46,
     99,  97, 112, 110, 112,  58,  78,  68,
     65, 114, 114,  97, 121,  46,  68,  84,
    121, 112, 101,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     48,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    137,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    129,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
    121,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
    113,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
    105,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
     89,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
     81,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
     65,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
     57,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98, 111, 111, 108,   0,   0,   0,   0,
    117, 105, 110, 116,  56,   0,   0,   0,
    117, 105, 110, 116,  49,  54,   0,   0,
    117, 105, 110, 116,  51,  50,   0,   0,
    117, 105, 110, 116,  54,  52,   0,   0,
    105, 110, 116,  56,   0,   0,   0,   0,
    105, 110, 116,  49,  54,   0,   0,   0,
    105, 110, 116,  51,  50,   0,   0,   0,
    105, 110, 116,  54,  52,   0,   0,   0,
    102, 108, 111,  97, 116,  51,  50,   0,
    102, 108, 111,  97, 116,  54,  52,   0,
    102, 108, 111,  97, 116,  49,  50,  56,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a5083459dbf2dc0e = b_a5083459dbf2dc0e.words;
#if !CAPNP_LITE
static const uint16_t m_a5083459dbf2dc0e[] = {0, 11, 9, 10, 6, 7, 8, 5, 2, 3, 4, 1};
const ::capnp::_::RawSchema s_a5083459dbf2dc0e = {
  0xa5083459dbf2dc0e, b_a5083459dbf2dc0e.words, 67, nullptr, m_a5083459dbf2dc0e,
  0, 12, nullptr, nullptr, nullptr, { &s_a5083459dbf2dc0e, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(DType_a5083459dbf2dc0e, a5083459dbf2dc0e);
}  // namespace schemas
}  // namespace capnp

// =======================================================================================


// NDArray
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t NDArray::_capnpPrivate::dataWordSize;
constexpr uint16_t NDArray::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind NDArray::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* NDArray::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE



